version: '3.8'

services:
  # Frontend Dashboard
  emailbot-dashboard:
    build: 
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: emailbot-dashboard
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://emailbot-app:8000
      - NEXT_PUBLIC_WS_URL=ws://emailbot-app:8000
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      - emailbot-app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  emailbot-app:
    build: .
    container_name: emailbot-app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://emailbot:${POSTGRES_PASSWORD}@emailbot-postgres:5432/emailbot
      - REDIS_URL=redis://emailbot-redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - M365_TENANT_ID=${M365_TENANT_ID}
      - M365_CLIENT_ID=${M365_CLIENT_ID}
      - M365_CLIENT_SECRET=${M365_CLIENT_SECRET}
      - MASTER_ENCRYPTION_KEY=${MASTER_ENCRYPTION_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ALERT_WEBHOOK_URL=${ALERT_WEBHOOK_URL}
      - LOG_LEVEL=INFO
    depends_on:
      - emailbot-postgres
      - emailbot-redis
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  emailbot-postgres:
    image: postgres:15-alpine
    container_name: emailbot-postgres
    environment:
      - POSTGRES_DB=emailbot
      - POSTGRES_USER=emailbot
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U emailbot -d emailbot"]
      interval: 10s
      timeout: 5s
      retries: 5

  emailbot-redis:
    image: redis:7-alpine
    container_name: emailbot-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Monitoring and Metrics
  emailbot-prometheus:
    image: prom/prometheus:latest
    container_name: emailbot-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  emailbot-grafana:
    image: grafana/grafana:latest
    container_name: emailbot-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped

  # Log aggregation
  emailbot-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: emailbot-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: unless-stopped

  emailbot-kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: emailbot-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://emailbot-elasticsearch:9200
    depends_on:
      - emailbot-elasticsearch
    restart: unless-stopped

  # Scheduled tasks and monitoring
  emailbot-scheduler:
    build: .
    container_name: emailbot-scheduler
    command: python -m celery -A app.services.scheduler worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://emailbot:${POSTGRES_PASSWORD}@emailbot-postgres:5432/emailbot
      - REDIS_URL=redis://emailbot-redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - M365_TENANT_ID=${M365_TENANT_ID}
      - M365_CLIENT_ID=${M365_CLIENT_ID}
      - M365_CLIENT_SECRET=${M365_CLIENT_SECRET}
      - MASTER_ENCRYPTION_KEY=${MASTER_ENCRYPTION_KEY}
    depends_on:
      - emailbot-postgres
      - emailbot-redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # System monitoring agent
  emailbot-node-exporter:
    image: prom/node-exporter:latest
    container_name: emailbot-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped

  # Reverse proxy and SSL termination
  emailbot-nginx:
    image: nginx:alpine
    container_name: emailbot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - emailbot-app
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  default:
    name: emailbot-network
    driver: bridge 